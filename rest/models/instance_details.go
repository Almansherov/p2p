// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// InstanceDetails instance details
// swagger:model InstanceDetails
type InstanceDetails struct {

	// hash
	Hash string `json:"hash,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// interface
	Interface *Interface `json:"interface,omitempty"`

	// peers
	Peers []*Peer `json:"peers"`

	// port
	Port int64 `json:"port,omitempty"`

	// proxies
	Proxies []*Proxy `json:"proxies"`
}

// Validate validates this instance details
func (m *InstanceDetails) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateInterface(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validatePeers(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateProxies(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *InstanceDetails) validateInterface(formats strfmt.Registry) error {

	if swag.IsZero(m.Interface) { // not required
		return nil
	}

	if m.Interface != nil {

		if err := m.Interface.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("interface")
			}
			return err
		}

	}

	return nil
}

func (m *InstanceDetails) validatePeers(formats strfmt.Registry) error {

	if swag.IsZero(m.Peers) { // not required
		return nil
	}

	for i := 0; i < len(m.Peers); i++ {

		if swag.IsZero(m.Peers[i]) { // not required
			continue
		}

		if m.Peers[i] != nil {

			if err := m.Peers[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("peers" + "." + strconv.Itoa(i))
				}
				return err
			}

		}

	}

	return nil
}

func (m *InstanceDetails) validateProxies(formats strfmt.Registry) error {

	if swag.IsZero(m.Proxies) { // not required
		return nil
	}

	for i := 0; i < len(m.Proxies); i++ {

		if swag.IsZero(m.Proxies[i]) { // not required
			continue
		}

		if m.Proxies[i] != nil {

			if err := m.Proxies[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("proxies" + "." + strconv.Itoa(i))
				}
				return err
			}

		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *InstanceDetails) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *InstanceDetails) UnmarshalBinary(b []byte) error {
	var res InstanceDetails
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
