// Code generated by go-swagger; DO NOT EDIT.

package daemon

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/subutai-io/p2p/rest/models"
)

// DaemonInfoOKCode is the HTTP code returned for type DaemonInfoOK
const DaemonInfoOKCode int = 200

/*DaemonInfoOK Sucessful operation

swagger:response daemonInfoOK
*/
type DaemonInfoOK struct {

	/*
	  In: Body
	*/
	Payload *models.Daemon `json:"body,omitempty"`
}

// NewDaemonInfoOK creates DaemonInfoOK with default headers values
func NewDaemonInfoOK() *DaemonInfoOK {

	return &DaemonInfoOK{}
}

// WithPayload adds the payload to the daemon info o k response
func (o *DaemonInfoOK) WithPayload(payload *models.Daemon) *DaemonInfoOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the daemon info o k response
func (o *DaemonInfoOK) SetPayload(payload *models.Daemon) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DaemonInfoOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DaemonInfoServiceUnavailableCode is the HTTP code returned for type DaemonInfoServiceUnavailable
const DaemonInfoServiceUnavailableCode int = 503

/*DaemonInfoServiceUnavailable Service unavailable

swagger:response daemonInfoServiceUnavailable
*/
type DaemonInfoServiceUnavailable struct {
}

// NewDaemonInfoServiceUnavailable creates DaemonInfoServiceUnavailable with default headers values
func NewDaemonInfoServiceUnavailable() *DaemonInfoServiceUnavailable {

	return &DaemonInfoServiceUnavailable{}
}

// WriteResponse to the client
func (o *DaemonInfoServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(503)
}
